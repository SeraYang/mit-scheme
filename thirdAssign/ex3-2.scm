(define (make-monitored sub)
  (let ((count 0)) 
    (define (call input) (begin (set! count (+ count 1))
                          (sub input)))
     (define (dispatch1 m)
        (cond ((eq? m 'how-many-calls?) count)
              ((eq? m 'reset-count) (set! count 0))
              (else (call m))))
     dispatch1))

;(define (make-monitored sub)
;  (let ((count 0)) 
;     (define (dispatch1 m)
;        (cond ((eq? m 'how-many-calls?) count)
;              ((eq? m 'reset-count) (set! count 0))
;              (else (call m))))
;     dispatch1))
;
;    (define (call input) (begin (set! count (+ count 1))
;                          (sub input)))
(define s (make-monitored sqrt))
